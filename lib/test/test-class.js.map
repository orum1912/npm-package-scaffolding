{"version":3,"sources":["../../src/test/test-class.js"],"names":["Test","isTestable","enumerable","name","work1","a","b","c","console","log","Promise","resolve","setTimeout","props","create","value","decorator","target","key","descriptor"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IACqBA,I,WADpBC,UAAU,CAAC,IAAD,C,UAERC,UAAU,CAAC,KAAD,C,UAEVA,UAAU,CAAC,KAAD,C,UAOVA,UAAU,CAAC,KAAD,C;;;AAHX,gBAAYC,IAAZ,EAAkB;AAAA;;AAAA,SAOlBC,KAPkB,GAOV,YAAM;AACZ;AACA,OAAC,UAACC,CAAD,EAAIC,CAAJ,EAAgB;AAAA,0CAANC,CAAM;AAANA,UAAAA,CAAM;AAAA;;AACfC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAZ,EAAeC,CAAf,EAAkBC,CAAlB;AACD,OAFD,EAEG,CAFH,EAEK,CAFL,EAEO,CAFP,EAES,CAFT,EAEW,CAFX;AAGD,KAZiB;;AAChB,SAAKJ,IAAL,GAAYA,IAAZ;AACD;;;;+BAEU;AACTK,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgB,KAAKN,IAAjC;AACD;;;;;;;;;;;AAQCK,gBAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;;uBACM,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAC3BC,kBAAAA,UAAU,CAACD,OAAD,EAAU,GAAV,CAAV;AACD,iBAFK,C;;;AAGNH,gBAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;;;;;;;;;;;;;;;;;;;;;;;;;AAGAD,cAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;;AACA,qBAAM,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAC3BC,gBAAAA,UAAU,CAACD,OAAD,EAAU,GAAV,CAAV;AACD,eAFK,CAAN;;;AAGAH,cAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;;AACA;;;;;;;;;;;;aA/BKI,K,GAAQ,c,UAERC,M,GAAS,UAACX,IAAD,EAAU;AACxB,SAAO,IAAIH,IAAJ,CAASG,IAAT,CAAP;AACD,C;;;;;;;;;;;;;;;;;AA+BH,SAASF,UAAT,CAAoBc,KAApB,EAA2B;AACzB,SAAO,SAASC,SAAT,CAAmBC,MAAnB,EAA2B;AAChCA,IAAAA,MAAM,CAAChB,UAAP,GAAoBc,KAApB;AACD,GAFD;AAGD;;AAED,SAASb,UAAT,CAAoBa,KAApB,EAA2B;AACzB,SAAO,UAAUE,MAAV,EAAkBC,GAAlB,EAAuBC,UAAvB,EAAmC;AACxCA,IAAAA,UAAU,CAACjB,UAAX,GAAwBa,KAAxB;AACA,WAAOI,UAAP;AACD,GAHD;AAID","sourcesContent":["@isTestable(true)\nexport default class Test {\n  @enumerable(false)\n  static props = 'static props';\n  @enumerable(false)\n  static create = (name) => {\n    return new Test(name);\n  };\n  constructor(name) {\n    this.name = name;\n  }\n  @enumerable(false)\n  showName() {\n    console.log('My name is ' + this.name);\n  }\n  work1 = () => {\n    // object rest & spread\n    ((a, b, ...c) => {\n      console.log(a, b, c);\n    })(1,2,3,4,5);\n  };\n  async work2() {\n    console.log('begin work1');\n    await new Promise(resolve => {\n      setTimeout(resolve, 300);\n    });\n    console.log('done work1');\n  }\n  *work3() {\n    console.log('begin work2');\n    yield new Promise(resolve => {\n      setTimeout(resolve, 300);\n    });\n    console.log('done work2');\n    yield;\n  }\n}\n\nfunction isTestable(value) {\n  return function decorator(target) {\n    target.isTestable = value;\n  };\n}\n\nfunction enumerable(value) {\n  return function (target, key, descriptor) {\n    descriptor.enumerable = value;\n    return descriptor;\n  };\n}\n"],"file":"test-class.js"}